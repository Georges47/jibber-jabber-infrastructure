version: "3.9"

services:
  # Nginx
  nginx:
    container_name: nginx
    restart: unless-stopped
    build: 
      context: nginx
      dockerfile: Dockerfile
    ports:
      - 80:80
      - 443:443
    depends_on:
      - ui
      - keycloak
      - posts
      - followers
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot

  # Certbot
  #certbot:
  #  image: certbot/certbot
  #  container_name: certbot
  #  volumes: 
  #    - ./certbot/conf:/etc/letsencrypt
  #    - ./certbot/www:/var/www/certbot
  #  command: certonly --webroot -w /var/www/certbot --force-renewal --email georges.stefan@ing.austral.edu.ar -d jibber-jabber.brazilsouth.cloudapp.azure.com --agree-tos
  #  depends_on:
  #    - nginx
  
  # Keycloak
  keycloak_db:
    image: postgres
    container_name: keycloak_db
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${KEYCLOAK_DB_NAME}
      POSTGRES_USER: ${KEYCLOAK_DB_USER}
      POSTGRES_PASSWORD: ${KEYCLOAK_DB_PASSWORD}
      
  keycloak:
    image: jboss/keycloak
    container_name: keycloak
    restart: unless-stopped
    environment:
      DB_VENDOR: POSTGRES
      DB_ADDR: keycloak_db
      DB_DATABASE: ${KEYCLOAK_DB_NAME}
      DB_USER: ${KEYCLOAK_DB_USER}
      DB_SCHEMA: public
      DB_PASSWORD: ${KEYCLOAK_DB_PASSWORD}
      KEYCLOAK_USER: ${KEYCLOAK_ADMIN_USER}
      KEYCLOAK_PASSWORD: ${KEYCLOAK_ADMIN_PASSWORD}
      PROXY_ADDRESS_FORWARDING: "true"
    volumes:
      - ./keycloak/register.ftl:/opt/jboss/keycloak/themes/jibber-jabber/login/register.ftl
      - ./keycloak/theme.properties:/opt/jboss/keycloak/themes/jibber-jabber/login/theme.properties
    depends_on:
      - keycloak_db
  
  # Posts
  posts_db:
    image: postgres
    container_name: posts_db
    restart: unless-stopped
    environment:
      POSTGRES_HOST: posts_db
      POSTGRES_USER: ${POSTS_DB_USER}
      POSTGRES_PASSWORD: ${POSTS_DB_PASSWORD}
    #volumes:
    #  - posts_data:/var/lib/postgresql/data
      
  posts:
    image: georgesstefan/jibber-jabber-posts-dev:latest
    container_name: posts
    restart: unless-stopped
    depends_on:
      - posts_db
    env_file:
      - ./.env
    environment:
      POSTGRES_HOST: posts_db
      POSTGRES_USER: ${POSTS_DB_USER}
      POSTGRES_PASSWORD: ${POSTS_DB_PASSWORD}
    labels:
      com.datadoghq.ad.logs: '[{"source": "ruby", "service": "posts"}]'
      
  # Followers
  followers_db:
    image: postgres
    container_name: followers_db
    restart: unless-stopped
    environment:
      POSTGRES_HOST: followers_db
      POSTGRES_USER: ${FOLLOWERS_DB_USER}
      POSTGRES_PASSWORD: ${FOLLOWERS_DB_PASSWORD}
    #volumes:
    #  - followers_data:/var/lib/postgresql/data
      
  followers:
    image: georgesstefan/jibber-jabber-follows-dev:latest
    container_name: followers
    restart: unless-stopped
    depends_on:
      - followers_db
    env_file:
      - ./.env
    environment:
      POSTGRES_HOST: posts_db
      POSTGRES_USER: ${FOLLOWERS_DB_USER}
      POSTGRES_PASSWORD: ${FOLLOWERS_DB_PASSWORD}
      
  # UI
  ui:
    image: georgesstefan/jibber-jabber-ui-dev:latest
    container_name: ui
    restart: unless-stopped
    environment:
      REACT_APP_API_BASE_URL: ${UI_API_BASE_URL}
  
  # Datadog
  datadog:
    image: datadog/agent
    container_name: datadog
    environment:
      - DD_API_KEY=${DATADOG_API_KEY}
      - DD_SITE=datadoghq.com
      - DD_LOGS_ENABLED=true
      - DD_APM_ENABLED=true
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /proc/:/host/proc/:ro
      - /sys/fs/cgroup:/host/sys/fs/cgroup:ro
